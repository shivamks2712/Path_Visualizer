{"version":3,"sources":["customGraph/Node.js","defaultGraph/weightedGraph.js","customGraph/grids.js","defaultGraph/bfsAlgoritm.js","defaultGraph/dfsAlgorithm.js","App.js","index.js"],"names":["CNode","_ref","wt","isStart","weight","weighted","isEnd","row","col","onMouseDown","onMouseEnter","onMouseUp","isWall","extendedClass","react_default","a","createElement","id","concat","className","Heap","Object","classCallCheck","this","contains","res","i","arr","length","x","y","insert","push","Math","floor","d","temp","remove","pop","top","min","getMin","isEmpty","containsObject","obj","list","rows","cols","CustomGraph","_useState","useState","_useState2","slicedToArray","grid","setGrid","_useState3","_useState4","mouseClick","setMouseClick","_useState5","_useState6","running","setRunning","_useState7","_useState8","start","setStart","_useState9","_useState10","end","setEnd","_useState11","_useState12","present","setPresent","_useState13","_useState14","setWeighted","useEffect","initializeGrid","Array","CreateSpot","addNeighbours","j","Spot","w","Number","MAX_SAFE_INTEGER","neighbours","addneighbour","setGridNode","map","rowIndex","key","colIndex","Node","mouseDown","mouseEnter","mouseUp","newGrid","getNewGridWithWalls","preStart","document","getElementById","preEnd","slice","node","newNode","objectSpread","eraseWall","BFSearch","bfsdata","array","endNode","parent","curr","visited","queue","shift","_curr","forEach","spot","b","pre","status","path","BFSAlgorithm","Promise","resolve","reject","visualizeVisited","then","setTimeout","visualizePath","alert","disabled","DFSearch","dfsdata","stack","dfs","element","DFSAlgorithm","DijtrasAlg","djtdata","h","neighbour","markInitialDistance","found","Dijtras","time","_loop","Fragment","role","aria-label","href","target","IconButton","style","color","GitHub_default","LinkedIn_default","type","onClick","window","location","reload","unWeighted","round","random","addWeight","unWeight","x1","y1","x2","y2","clearTraversal","k","createRandomWall","App","grids","ReactDOM","render"],"mappings":"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","file":"static/js/main.f5784084.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nlet CNode;\r\nexport default  CNode =({isStart,weight,weighted,isEnd,row,col,onMouseDown,onMouseEnter,onMouseUp,isWall})=>{\r\n    const extendedClass = isStart?'nodeStart':isEnd? 'nodeEnd': isWall?'wall':'path';\r\n    let wt;\r\n    if(weighted) wt= weight;\r\n   \r\n    return <div id={`node-${row}-${col}`} className={`node  ${extendedClass}` } \r\n     onMouseDown={()=>{onMouseDown(row,col)} }\r\n     onMouseEnter={()=>{ onMouseEnter(row,col)} }       \r\n     onMouseUp={()=>{onMouseUp(row,col) }}> {wt}\r\n     </div> \r\n    }","function markInitialDistance(array,start, h,parent){\r\nlet {x,y}=start;\r\narray[x][y].d=0;\r\n\r\nlet neighbour = array[x][y].neighbours;\r\n   for(let i=0;i<neighbour.length;i++){  \r\n        let a= neighbour[i].x;\r\n        let b= neighbour[i].y;\r\n        if(!array[a][b].isWall){\r\n        array[a][b].d=array[a][b].w;\r\n        h.insert({x:a,y:b,d:array[a][b].d});\r\n        parent[a][b]=start;\r\n    }\r\n      }\r\n}\r\n\r\n\r\n//                                  HEAP\r\nclass Heap{\r\n\r\n    constructor(){\r\n    this.arr=[];\r\n    this.arr.push({x:0,y:0,d:0});\r\n    this.length=1;\r\n           }\r\n//                      Inserting into heap\r\n    contains=function(a){\r\n        let res=-1;\r\n        for(let i=1;i<this.arr.length;i++){\r\n           if(this.arr[i].x==a.x&&this.arr[i].y==a.y){\r\n               res=i;\r\n               break;\r\n           }\r\n        }\r\n        return res;\r\n    }\r\n    insert=function(a){\r\n    if(this.arr.length==1){\r\n        this.arr.push(a);\r\n        return;\r\n      }\r\n      else{\r\n          this.arr.push(a);\r\n          let i=this.arr.length-1;\r\n          while(i>=1){\r\n              if(this.arr[Math.floor(i/2)].d>a.d){\r\n                  let temp =this.arr[Math.floor(i/2)];\r\n                  this.arr[Math.floor(i/2)]=a;\r\n                  this.arr[i]=temp;\r\n                  i= Math.floor(i/2);\r\n              }\r\n              else break;\r\n          }\r\n        }\r\n   }\r\n//      Deleting   from a heap\r\n      remove=function(){\r\n        if(this.arr.length<=1) return null;\r\n        if(this.arr.length==2){\r\n            return this.arr.pop();\r\n        }\r\n        else{\r\n            let top=this.arr[1];\r\n            this.arr[1]=this.arr.pop();\r\n            let i=1,min=2;\r\n            while(2*i+1<=this.arr.length-1){\r\n\r\n              min= this.arr[2*i].d<this.arr[2*i+1].d? 2*i:2*i+1;\r\n              if(this.arr[min].d<this.arr[i].d){\r\n                  let temp=this.arr[min];\r\n                  this.arr[min]=this.arr[i];\r\n                  this.arr[i]=temp;\r\n                  i=min;\r\n\r\n              }\r\n              else{\r\n                  return top;\r\n              }\r\n            } \r\n            if(this.arr.length==2*i+1){\r\n                if(this.arr[2*i].d<this.arr[i].d){\r\n                    let temp=this.arr[2*i];\r\n                    this.arr[2*i]=this.arr[i];\r\n                    this.arr[i]=temp;\r\n                }\r\n            }\r\n            return top;\r\n        }\r\n    }\r\n        getMin=function(){\r\n            return this.arr.length>1? this.arr[1]:null;\r\n        }\r\n        isEmpty=function(){\r\n            return (this.arr.length==1)\r\n        }\r\n      \r\n    }\r\n\r\n\r\n\r\nfunction containsObject(obj, list) {\r\n    var i;\r\n    for (i = 0; i < list.length; i++) {\r\n        if (list[i].x === obj.x && list[i].y === obj.y) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\n\r\n\r\n//                               DIJTRA'S ALGORITHM\r\n\r\nexport default function Dijtras(array,rows,cols,start,endNode){\r\n\r\n    let h=new Heap();\r\n    let parent =new Array(rows);\r\n    for(let i=0;i<rows;i++){\r\n           parent[i]=new Array(cols);  \r\n    }\r\n    parent[start.x][start.y]={x:-1,y:-1};\r\n    \r\n\r\nmarkInitialDistance(array,start,h,parent);\r\n    let visited =[]; \r\n    visited.push(start);\r\n    let status =false;\r\n   \r\n     let curr;\r\n     \r\n while(!h.isEmpty()){\r\n     curr =h.remove();\r\n\r\n    if(curr.x==endNode.x&&curr.y==endNode.y){status=true;break;}\r\n    let neighbour =array[curr.x][curr.y].neighbours;\r\n\r\n    for(let i=0;i<neighbour.length;i++){\r\n        let a=neighbour[i].x,b=neighbour[i].y;\r\n\r\n        if(!containsObject({x:a,y:b},visited)&&!array[a][b].isWall){\r\n            if(array[a][b].d>array[a][b].w+curr.d){\r\n\r\n                array[a][b].d=array[a][b].w+curr.d;\r\n                let found =h.contains({x:a,y:b})\r\n                if(found==-1){\r\n                    h.insert({x:a,y:b,d:array[a][b].d});\r\n                }\r\n                else{\r\n                    h.arr[found]={x:a,y:b,d:array[a][b].d}\r\n                }\r\n                parent[a][b]={x:curr.x,y:curr.y};\r\n            }\r\n        }\r\n    }\r\n\r\n    visited.push({x:curr.x,y:curr.y});\r\n\r\n}\r\n\r\n let path=[]\r\nif(status){\r\n    while(!(curr.x==-1&&curr.y==-1)){\r\n        let a= curr.x,b=curr.y;\r\n        path.push({x:a,y:b});\r\n        curr=parent[a][b];\r\n        \r\n    }\r\n}\r\n\r\n\r\nreturn {visited:visited,path:path,status:status}\r\n\r\n}","import React from \"react\";\r\nimport CNode from \"./Node\";\r\nimport { useState,useEffect } from \"react\";\r\nimport './Node.css'\r\nimport BFSAlgorithm from \"../defaultGraph/bfsAlgoritm\";\r\nimport DFSAlgorithm from \"../defaultGraph/dfsAlgorithm\";\r\nimport Dijtras from \"../defaultGraph/weightedGraph\";\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\n\r\nlet  rows =24,cols=44;\r\n\r\n\r\n const CustomGraph=()=>{\r\n    const [grid,setGrid]= useState([]);\r\n    const [mouseClick,setMouseClick]=useState(false);\r\n    const [running,setRunning]=useState(false)\r\n    const [start,setStart]=useState({x:10,y:cols-35});\r\n    const [end,setEnd]=useState({x:10,y:cols-6})\r\n    const [present,setPresent]=useState('start')\r\n    let [weighted,setWeighted] =useState(false);\r\n\r\n useEffect(()=>{\r\n     initializeGrid();\r\n },[])\r\n\r\n\r\n\r\n\r\n\r\n//                                NODE AND GRID STUFF.......\r\n  const  initializeGrid= ()=>{\r\n        const grid = new Array(rows);\r\n        for(let i=0;i<rows;i++) {grid[i]=new Array(cols);}   \r\n        CreateSpot(grid);\r\n        addNeighbours(grid);\r\n        setGrid(grid);      \r\n   } \r\n \r\n\r\n const CreateSpot=(grid)=>{\r\n    for(let i=0;i<rows;i++){\r\n        for(let j=0;j<cols;j++){\r\n            grid[i][j]= new Spot(i,j);\r\n        }\r\n    }\r\n}\r\n\r\nclass Spot {\r\n    constructor(i,j){\r\n     this.x=i;\r\n     this.y=j;\r\n     this.w=1;\r\n     this.d=Number.MAX_SAFE_INTEGER;\r\n     this.isStart = (i==start.x&&j==start.y);\r\n     this.isEnd=(i==end.x&&j==end.y)\r\n     this.isWall=false;\r\n     this.neighbours=[];\r\n     this.addneighbour=function(grid){\r\n        if(i<rows-1){ \r\n              this.neighbours.push({x:i+1,y:j})\r\n         }\r\n        if(i>0){\r\n              this.neighbours.push( {x:i-1,y:j})\r\n         }\r\n        if(j<cols-1){\r\n              this.neighbours.push({x:i,y:j+1});\r\n        }  \r\n        if(j>0){\r\n              this.neighbours.push({x:i,y:j-1});\r\n        } \r\n        };\r\n    }\r\n}\r\n//                                                     Adding neighbours\r\nconst addNeighbours=(grid)=>{\r\n    for(let i=0;i<rows;i++){\r\n        for(let j=0;j<cols;j++){\r\n            grid[i][j].addneighbour(grid);\r\n        }\r\n    }\r\n }\r\n//                                                       Adding weight \r\n\r\nfunction addWeight(){\r\n    let unWeighted = grid.slice();\r\n    for(let i=0;i<rows;i++){\r\n        for(let j=0;j<cols;j++){\r\n            unWeighted[i][j].w = Math.round((Math.random()*14))+1;\r\n        }\r\n    }\r\n    setGrid(unWeighted);\r\n    setWeighted(true);\r\n    document.getElementById('dfsbutton').disabled=true; \r\n    document.getElementById('visualizebutton').disabled=true;\r\n}\r\nfunction unWeight(){\r\n    let unWeighted = grid.slice();\r\n    for(let i=0;i<rows;i++){\r\n        for(let j=0;j<cols;j++){\r\n            unWeighted[i][j].w =1;\r\n        }\r\n    }\r\n    setWeighted(false);\r\n    setGrid(unWeighted);\r\n    document.getElementById('dfsbutton').disabled=false; \r\n    document.getElementById('visualizebutton').disabled=false;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n let setGridNode = <div className=\"grid-box\">\r\n    {\r\n        grid.map((row,rowIndex)=>{\r\n            return <div className=\"grid-row\" key={rowIndex}> \r\n                {row.map((col,colIndex)=>{\r\n                    return <CNode key={colIndex} weighted={weighted} weight={col.w} row={col.x} col={col.y} isStart={col.isStart} isEnd={col.isEnd} \r\n                     onMouseDown={mouseDown} onMouseEnter={mouseEnter} onMouseUp={mouseUp} isWall={col.isWall}  />\r\n                })}\r\n            </div>\r\n        })\r\n    }\r\n</div>\r\n\r\n\r\n//                                                       CREATING   WALLS......\r\nfunction mouseDown(row,col){\r\n     if(!running){\r\n        if((grid[row][col].x==start.x&&grid[row][col].y==start.y)||(grid[row][col].x==end.x&&grid[row][col].y==end.y)){\r\n            if(grid[row][col].x==start.x&&grid[row][col].y==start.y){\r\n                setPresent('start');\r\n            }\r\n           else setPresent('end') \r\n        }\r\n        else{\r\n  setMouseClick(true);\r\n  const newGrid = getNewGridWithWalls(grid,row,col);\r\n  addNeighbours(newGrid);\r\n  setGrid(newGrid);\r\n        }\r\n  }\r\n}\r\n\r\nfunction mouseEnter(row,col){\r\n    if(!mouseClick) { return};\r\n    const newGrid = getNewGridWithWalls(grid,row,col);\r\n    setGrid(newGrid);\r\n}\r\nfunction mouseUp(row,col){\r\n//                      Set Start and end functions\r\n    if(!mouseClick){\r\n    if(present=='start'){\r\n        let preStart= start;\r\n        if(!grid[row][col].isWall&&!(grid[row][col].x==end.x&&grid[row][col].y==end.y)){\r\n        setStart({x:row,y:col});\r\n            document.getElementById(`node-${preStart.x}-${preStart.y}`).className=\"node path\";\r\n            document.getElementById(`node-${row}-${col}`).className=\"node nodeStart\";\r\n\r\n        }\r\n    }\r\n    if(present=='end'){\r\n        let preEnd= end;\r\n        \r\n        if(!grid[row][col].isWall&&!(grid[row][col].x==start.x&&grid[row][col].y==start.y)){\r\n          setEnd({x:row,y:col});\r\n          document.getElementById(`node-${preEnd.x}-${preEnd.y}`).className=\"node path\";\r\n          document.getElementById(`node-${row}-${col}`).className=\"node nodeEnd\";\r\n\r\n    }}\r\n     \r\n     }\r\n//                                       Walls       Functions\r\n    else{\r\n    setMouseClick(false);\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction getNewGridWithWalls(grid,row,col){\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    let newNode=node;\r\n    if(!(node.x==start.x&&node.y==start.y)&&!(node.x==end.x&&node.y==end.y)){\r\n     newNode ={...node, isWall:!node.isWall};\r\n     }\r\n    newGrid [row][col]=newNode;\r\n    return newGrid;\r\n\r\n}\r\n\r\n\r\n//                           REMOVING WALLS\r\nfunction eraseWall(){\r\n    const newGrid = grid.slice();\r\n    for(let i=0;i<newGrid.length;i++){\r\n        for(let j=0;j<newGrid[i].length;j++){\r\n           newGrid[i][j].isWall=false;\r\n        }\r\n    }  \r\n    setGrid(newGrid);  \r\n}\r\n\r\n//                           RANDOM WALLS\r\nfunction createRandomWall(){\r\n    eraseWall();\r\n    const newGrid = grid.slice();\r\n    for(let i=0;i<newGrid.length;i++){\r\n        for(let j=0;j<newGrid[i].length;j++){\r\n            let k = Math.random();\r\n            if(!(newGrid[i][j].x==start.x&&newGrid[i][j].y==start.y)&&!(newGrid[i][j].x==end.x&&newGrid[i][j].y==end.y))\r\n            if(k<0.25) newGrid[i][j].isWall=true;\r\n        }\r\n    }  \r\n    setGrid(newGrid);  \r\n}\r\n\r\n\r\n\r\n\r\n//                                  RUN ALGORITHMS \r\n\r\nconst BFSearch=(grid,)=>{\r\n     setRunning(true)\r\n     let bfsdata = BFSAlgorithm(grid,rows,cols,{x:start.x,y:start.y},{x:end.x,y:end.y});\r\n\r\n     const myPromise = new Promise((resolve, reject) => {\r\n         visualizeVisited(bfsdata.visited,8,resolve);\r\n         \r\n      });\r\n      myPromise.then( ()=>{\r\n          setTimeout(()=>{\r\n            if(bfsdata.status){visualizePath(bfsdata.path)}\r\n        else alert('No path Possible')\r\n          },800)\r\n        \r\n        setTimeout(()=> {document.getElementById('clearTraversal').disabled=false;\r\n          setRunning(false)    \r\n         }\r\n        ,2000)\r\n          } )         \r\n    \r\n}\r\n\r\n\r\n//                                   DFS \r\nconst DFSearch=(grid)=>{\r\n    setRunning(true);\r\n    const dfsdata = DFSAlgorithm(grid,rows,cols,{x:start.x,y:start.y},{x:end.x,y:end.y});\r\n    new Promise((resolve,reject)=>{\r\n        visualizeVisited(dfsdata.visited,8,resolve);\r\n    }).then(()=>{\r\n        setTimeout(()=> {document.getElementById('clearTraversal').disabled=false;\r\n        setRunning(false)\r\n        if(!dfsdata.status){alert('No path Possible');}\r\n         }\r\n        ,1000)\r\n    })\r\n      \r\n         \r\n\r\n}\r\n\r\n//                                         Dijtras\r\nconst DijtrasAlg=(grid)=>{\r\n    setRunning(true);\r\n    \r\n    const djtdata = Dijtras(grid,rows,cols,{x:start.x,y:start.y},{x:end.x,y:end.y});\r\n    new Promise((resolve,reject)=>{\r\n        visualizeVisited(djtdata.visited,8,resolve);\r\n    }).then(()=>{\r\n        setTimeout(()=> {document.getElementById('clearTraversal').disabled=false;\r\n        if(djtdata.status){visualizePath(djtdata.path)}\r\n        else alert('No path Possible')\r\n        setRunning(false);\r\n       \r\n         }\r\n        ,1000)\r\n        for(let i=0;i<rows;i++){\r\n            for(let j=0;j<cols;j++){\r\n                grid[i][j].d=Number.MAX_SAFE_INTEGER;\r\n            }\r\n        }\r\n    })\r\n      \r\n         \r\n\r\n}\r\n\r\n\r\nconst visualizeVisited=(visited,time,resolve)=>{\r\n    \r\n    visited.forEach((element,i) => {\r\n        setTimeout(()=>{\r\n            if(!(element.x==start.x&&element.y==start.y)&&!(element.x==end.x&&element.y==end.y)) { \r\n         document.getElementById(`node-${element.x}-${element.y}`).className=\"node visitedPath\";} \r\n         if(i==visited.length-1) {resolve('foo');}\r\n        },i*time);\r\n        \r\n    });\r\n \r\n}\r\nconst visualizePath=(path)=>{\r\n    for(let i=0;i<path.length;i++){  \r\n        setTimeout(()=>{\r\n        let node= path[path.length-1-i];\r\n        if(!(node.x==start.x&&node.y==start.y)&&!(node.x==end.x&&node.y==end.y)) { \r\n        document.getElementById(`node-${node.x}-${node.y}`).className=\"node shortestPath\"; };  \r\n        },i*35);\r\n    }\r\n   \r\n};\r\n\r\nfunction clearTraversal (){\r\n    for(let i=0;i<rows;i++){\r\n        for(let j=0;j<cols;j++){\r\n            let x1=start.x,y1=start.y,x2=end.x,y2=end.y;\r\n            if(!grid[i][j].isWall&&!(grid[i][j].x==x1&&grid[i][j].y==y1)&&!(grid[i][j].x==x2&&grid[i][j].y==y2)){\r\n          document.getElementById(`node-${i}-${j}`).className=\"node path\";\r\n         };\r\n            \r\n        }\r\n    }\r\n    if(!weighted){\r\n        document.getElementById('dfsbutton').disabled=false; \r\n        document.getElementById('visualizebutton').disabled=false;\r\n    }\r\n   \r\n    document.getElementById('randomWall').disabled=false;\r\n    document.getElementById('eraseWall').disabled=false;\r\n    document.getElementById('djtbutton').disabled=false;\r\n    document.getElementById('removeWeight').disabled=false; \r\n    document.getElementById('addWeight').disabled=false;\r\n\r\n}\r\n\r\n\r\n\r\nreturn <>\r\n                                            {/* NAVBARS */}\r\n <div className=\"btn-group actionBtn btnbar \" role=\"group\" aria-label=\"Basic mixed styles example\"  >\r\n\r\n                                     \r\n \r\n<a href=\"https://github.com/shivamks2712\" target=\"_blank\" className=\"me-4 text-reset modeLink\">\r\n <IconButton style={{ color: 'white'}}><GitHubIcon/></IconButton>  \r\n </a>\r\n <a href=\"http://ca.linkedin.com/in/linkedinshivam-singh-9a2a17208\" target=\"_blank\" \r\n className=\"me-4 text-reset modeLink\"> <IconButton style={{ color: 'white'}}><LinkedInIcon/></IconButton>\r\n </a>\r\n <button type=\"button\"  onClick={()=>{window.location.reload(); }} className=\"btn btn-success modebtn\">\r\n      Reset</button>\r\n <button type=\"button\" onClick={()=>{addWeight() }} className=\"btn btn-success modebtn\" id=\"removeWeight\">\r\n      Add Weight</button>\r\n <button type=\"button\"  onClick={()=>{unWeight() }} className=\"btn btn-success modebtn\" id=\"addWeight\">\r\n      Remove Weight</button>\r\n\r\n<button type=\"button\" className=\"btn btn-success modebtn\" id=\"clearTraversal\"\r\n     onClick={()=>{\r\n        clearTraversal();\r\n          }}\r\n      > Clear  Traversal</button>\r\n <button type=\"button\" className=\"btn btn-success modebtn\" id=\"randomWall\"\r\n     onClick={()=>{\r\n        createRandomWall();        \r\n            }}\r\n    >Generate Walls</button>\r\n<button type=\"button\" className=\"btn btn-success modebtn\" id=\"eraseWall\"\r\n     onClick={()=>{\r\n        eraseWall();         \r\n       }}\r\n        >Erase Walls</button>\r\n</div>\r\n\r\n                              {/* ALGORITHM BUTTONS */}\r\n\r\n<div className=\"mainbox\">\r\n {setGridNode}\r\n <div className=\"algorithmbar\"   >\r\n     \r\n     <h3>ALGORITHMS</h3>\r\n     \r\n     {/*  */}\r\n     <button type=\"button\" className=\"btn btn-danger algbtn\"disabled={false} id=\"djtbutton\"\r\n    onClick={()=>{\r\n        DijtrasAlg(grid);    \r\n        document.getElementById('dfsbutton').disabled=true; \r\n        document.getElementById('visualizebutton').disabled=true;\r\n        document.getElementById('randomWall').disabled=true;\r\n        document.getElementById('clearTraversal').disabled=true;\r\n        document.getElementById('eraseWall').disabled=true; \r\n        document.getElementById('djtbutton').disabled=true;\r\n        document.getElementById('removeWeight').disabled=true; \r\n        document.getElementById('addWeight').disabled=true;\r\n     }}  >Dijkstra's Search </button>\r\n    {/*  */}\r\n\r\n    <button type=\"button\" className=\"btn btn-danger algbtn\"disabled={false} id=\"visualizebutton\"\r\n    onClick={()=>{\r\n        BFSearch(grid);\r\n        document.getElementById('dfsbutton').disabled=true; \r\n        document.getElementById('visualizebutton').disabled=true;\r\n        document.getElementById('randomWall').disabled=true;\r\n        document.getElementById('clearTraversal').disabled=true;\r\n        document.getElementById('eraseWall').disabled=true;  \r\n        document.getElementById('removeWeight').disabled=true; \r\n        document.getElementById('addWeight').disabled=true;    \r\n\r\n     }}  >BFS Search </button>\r\n    \r\n   \r\n    <button type=\"button\" className=\"btn btn-danger algbtn\" id=\"dfsbutton\"\r\n     onClick={()=>{\r\n        DFSearch(grid);\r\n        document.getElementById('dfsbutton').disabled=true; \r\n        document.getElementById('visualizebutton').disabled=true;   \r\n        document.getElementById('randomWall').disabled=true;\r\n        document.getElementById('clearTraversal').disabled=true;\r\n        document.getElementById('eraseWall').disabled=true;\r\n        document.getElementById('removeWeight').disabled=true; \r\n        document.getElementById('addWeight').disabled=true;\r\n\r\n    }}\r\n    >DFS Search</button>\r\n</div>\r\n</div>\r\n </>\r\n}\r\n\r\nexport default CustomGraph;","\r\n\r\nexport default   function   BFSAlgorithm(array,rows,cols,start,endNode)  {\r\n    let parent =new Array(rows);\r\n    for(let i=0;i<rows;i++){\r\n           parent[i]=new Array(cols);  \r\n    }\r\n    parent [start.x][start.y]={x:-1,y:-1};\r\n    \r\n    let end   = {x:endNode.x,y:endNode.y};\r\n    let visited=[{x:start.x,y:start.y}];\r\n    let queue =[]\r\n    let curr;\r\n    queue.push({x:start.x,y:start.y});\r\n\r\n\r\n  //  CHECK CONTAINS OBJECT OR NOT\r\n  function containsObject(obj, list) {\r\n        var i;\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i].x === obj.x && list[i].y === obj.y) {\r\n                return true;\r\n            }\r\n        }\r\n    \r\n        return false;\r\n    }\r\n\r\n\r\n //   main algorithm starts........\r\n while(queue.length!==0){\r\n    curr=queue.shift();\r\n    if(curr.x===end.x&&curr.y===end.y) break;\r\n    let {x,y}=curr; \r\n    array[x][y].neighbours.forEach( (spot) => {\r\n        let a=spot.x,b=spot.y;\r\n        let pre={x:a,y:b};\r\n        if( !containsObject(pre,visited)&&!array[a][b].isWall){\r\n         visited.push(pre);\r\n         queue.push(pre); \r\n         parent[a][b]=curr;\r\n        }\r\n    });\r\n    \r\n}\r\n    let status = true;\r\n    if(curr.x!==end.x||curr.y!==end.y) status=false;\r\n  \r\n     let path=[];\r\n    \r\n     let a =curr.x,b=curr.y;\r\n     while(a!==-1&&b!==-1){\r\n         path.push({x:a,y:b});\r\n         curr=parent[a][b];\r\n        \r\n         a=curr.x;\r\n         b=curr.y;\r\n\r\n     }\r\n     \r\n    \r\n      return {visited:visited,path:path,status:status}\r\n   \r\n  \r\n}","\r\n\r\n\r\nexport default   function   DFSAlgorithm(array,rows,cols,start,endNode)  {\r\n \r\n    let parent =new Array(rows);\r\n    for(let i=0;i<rows;i++){\r\n           parent[i]=new Array(cols);  \r\n    }\r\n    parent [start.x][start.y]={x:-1,y:-1};\r\n    let end   = {x:endNode.x,y:endNode.y};\r\n    let visited=[{x:start.x,y:start.y}];\r\n    let stack =[];\r\n    stack.push({x:start.x,y:start.y});\r\n    let curr;\r\n    let status = false;\r\n    \r\n //   main algorithm starts........\r\n\r\nconst dfs=(stack,visited)=>{\r\n    curr=stack.pop();\r\n   if(curr.x==end.x&&curr.y==end.y){\r\n       status=true;\r\n         return;\r\n    }\r\n    array[curr.x][curr.y].neighbours.forEach(element => {\r\n        if(status) return;\r\n        if(!containsObject({x:element.x,y:element.y},visited)&&!array[element.x][element.y].isWall){\r\n              stack.push({x:element.x,y:element.y});\r\n              visited.push({x:element.x,y:element.y});\r\n              parent[element.x][element.y]=curr;\r\n              dfs(stack,visited);\r\n        }\r\n        \r\n    });\r\n\r\n}\r\ndfs(stack,visited);\r\n\r\n\r\n\r\n //  CHECK CONTAINS OBJECT OR NOT\r\n function containsObject(obj, list) {\r\n    var i;\r\n    for (i = 0; i < list.length; i++) {\r\n        if (list[i].x == obj.x && list[i].y == obj.y) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n//      RETURNING    DATA\r\n\r\n     let path=[];\r\n     let a =curr.x,b=curr.y;\r\n     while(a!=-1&&b!=-1){\r\n         path.push({x:a,y:b});\r\n         curr=parent[a][b];\r\n         a=curr.x;\r\n         b=curr.y;\r\n     }\r\n      return {visited:visited,path:path,status:status}\r\n\r\n  \r\n}","import React from \"react\";\r\nimport CustomGraph from './customGraph/grids'\r\n\r\n\r\nexport default function App (){\r\n   return <>\r\n   <CustomGraph/>\r\n   {/* <PathFinder/> */}\r\n   </> \r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js'\n\nReactDOM.render(\n  <App/>    ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}